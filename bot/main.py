# bot/main.py

import asyncio
import os

from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv

from bot.router import router
from utils.logger import setup_logger

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("–ü—Ä–æ–ø–∏—à–∏—Ç–µ BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env")

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = setup_logger("zoo_totem_bot")

async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    bot = Bot(token=BOT_TOKEN)
    dp  = Dispatcher(storage=MemoryStorage())
    dp.include_router(router)

    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ ZooTotemBot‚Ä¶")
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling ‚Äî –±–æ—Ç –±—É–¥–µ—Ç –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å Telegram
        await dp.start_polling(bot)
    finally:
        # –ü—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–∫—Ä–æ–µ–º –±–æ—Ç (–∏ HTTP-—Å–µ—Å—Å–∏—é –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ)
        await bot.session.close()
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –∫–æ—Ä—É—Ç–∏–Ω
    asyncio.run(main())
